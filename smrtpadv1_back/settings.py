"""
Django settings for smrtpadv1_back project.

Generated by 'django-admin startproject' using Django 1.10.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import envvars

envvars.load('/var/www/.env')
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#1!#!0p+akibi2ox^4s9(scw$13rpup$k(u7(%$7fsitng2v-i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'oauth2_provider',
    'rest_framework_swagger',
    'rest_framework',
    'rest_framework.authtoken',
    'user',
    'properties'
]

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {'read': 'Read scope', 'write': 'Write scope'}
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.ext.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    )
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware'
]

CORS_ORIGIN_WHITELIST = (
    'dev-api.smartpad.local:8096',
)

CORS_ORIGIN_ALLOW_ALL = False

ROOT_URLCONF = 'smrtpadv1_back.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smrtpadv1_back.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get('SMPD_DB_NAME'),
        'USER': os.environ.get('SMPD_DB_USER'),
        'PASSWORD': os.environ.get('SMPD_DB_PASS'),
        'HOST': os.environ.get('SMPD_DB_HOST'),
        'PORT': "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "assets/")
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "assets/"),
# ]
STATIC_URL = '/assets/'


## OPTIONS ##

OPT_STATUS = (
    ('A', 'Active'),
    ('I', 'Inactive'),
    ('D', 'Deleted')
)

OPT_COUNTRY = (
    ('ph', 'Philippines'),
    ('sg', 'Singapore'),
)

OPT_VALID_IDS = {
    ('0', 'none'),
    ('1', 'SSS'),
    ('2', 'Passport'),
    ('3', "Driver's License"),
}

OPT_USER_TYPE = (
    ('1', 'TENANT'),
    ('2', 'OWNER'),
    ('3', 'AGENT'),
)

OPT_PROPERTY_TYPE = (
    ('1', 'Studio'),
    ('2', '1-Bedroom'),
    ('3', '2-Bedroom'),
    ('4', '3-Bedroom'),
    ('6', 'Townhouse'),
)

OPT_PAYMENT_TYPE = (
    ('1', 'Cash'),
    ('2', 'Post-dated Cheque'),
    ('3', 'Flexible'),
)

OPT_PAYMENT_INTERVAL = (
    ('1', 'Monthly'),
    ('2', 'Quarterly'),
    ('3', 'Semi-Annually'),
    ('4', 'Annually'),
)

OPT_RENT_STATUS = (
    ('1', 'Open'),
    ('2', 'Rented'),
    ('3', 'Available Soon'),
)
